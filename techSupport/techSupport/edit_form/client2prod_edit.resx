<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIBoAAAEAIACQDQAAFgAAACgAAAAgAAAANAAAAAEAIAAAAAAAAA0AAAAAAAAAAAAAAAAAAAAA
        AADNmiYA05smXtGWJffOkCT/yoki/8eBIf/Eeh//wXIe/71rHP+6ZBv/t1wZ/7NUF/+vTRf/rEQV/6g8
        E/+kNRL/ozIR/6MyEf+jMhH/ozIR/6MyEf+jMhH/ozIR/6MyEf+jMhH/ozIR/6MyEf+jMhH/ozIR/6My
        Ef+jMhHyojIRZNOeJwLSmCaI0JQl/82NJP/JhSL/xn4g/8N3Hv+/bx3/vGgb/7lgGv+1WRj/slEX/61J
        Fv+qQBT/pjgT/6QzEf+jMhH/ozIR/6MyEf+jMhH/ozIR/6MyEf+jMhH/ozIR/6MyEf+jMhH/ozIR/6My
        Ef+jMhH/ozIR/6MyEa2hMhIU5asrANCVJU3OkCTxy4ki/8eCIf/EeiD/wXMe/75sHf+6ZBv/t10Z/7NU
        GP+vTBb/q0QU/6g8E/+lNRH/ozIR/6MyEf+jMhH/ozIR/6MyEf+jMhH/ozIR/6MyEf+jMhH/ozIR/6My
        Ef+jMhH/ozEQ/6MyEf+jMhHpozIRPaEyEgDnrCsAz44lCsyLI5jJhSH/xn4g/8J2H/+/bxz/vGgb/Llh
        GtG1WRjAsVIXwK1JFsCqQRXApjkSwKMzEcCjMRDApDERwKQyEcCkMRHApDERwKMxEcCkMRHApDIRwKQy
        EcCkMRHApDIRwKMxEMCjMRDApDIRwKMyEXSmMhAEAAAAAAAAAADPjyUAyoYiLseBIdvEeh//wHMe/71s
        HP+6ZBv7uF4ah7RYFw2uUBcJrEcWCao/FgmlNxEJoTEPCaMwDwmlMBEJpTIRCaUwEQmkMBEJozARCaUw
        EQmlMhEJpTIRCaUxEgmlMhEJozAPCaMxEAmlMhEJozIPA6UxEAAAAAAAAAAAAAAAAADDhSICxXwgeMN2
        Hvq/bx3/vGcb/7lgGv+1WRjds1IXL69QFQCtSBYAqkAVAKY4EgCiMhAAozEQAKQxEQCkMhEApDERAKQx
        EQCjMREApDERAKQyEQCkMhEApDERAKQyEQCjMRAAozEQAKQyEQCjMhAAAAAAAAAAAAAAAAAAAAAAAMeF
        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
        A///+AP///wH///+D/8=
</value>
  </data>
</root>